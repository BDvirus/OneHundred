module.exports = () => ({ entry:
   { app: 'C:\\dev\\Arcgis\\OneHundred\\src\\scripts\\main.ts' },
  output:
   { path: 'C:\\dev\\Arcgis\\OneHundred\\build',
     filename: 'js/[name].js',
     libraryTarget: 'amd',
     chunkFilename: 'js/[name].chunk.js',
     webassemblyModuleFilename: '[modulehash].module.wasm',
     hotUpdateFunction: 'webpackHotUpdate',
     jsonpFunction: 'webpackJsonp',
     chunkCallbackName: 'webpackChunk',
     globalObject: 'window',
     pathinfo: true,
     sourceMapFilename: '[file].map[query]',
     hotUpdateChunkFilename: '[id].[hash].hot-update.js',
     hotUpdateMainFilename: '[hash].hot-update.json',
     chunkLoadTimeout: 120000,
     hashFunction: 'md4',
     hashDigest: 'hex',
     hashDigestLength: 20 },
  plugins:
   [ { options: {}, fullBuildTimeout: 200, requestTimeout: 10000 },
     { cleanStaleWebpackAssets: true,
       protectWebpackAssets: true,
       outputPath: 'C:\\dev\\Arcgis\\OneHundred\\build' },
     { options: {} },
     { options: {}, version: 4 },
     { outputPath: './', name: 'webpack.config.dump', depth: 4 },
     { definitions: {} } ],
  resolve:
   { alias: { '~': 'C:\\dev\\Arcgis\\OneHundred\\src' },
     unsafeCache: true,
     modules: [ 'node_modules' ],
     extensions: [ '.wasm', '.mjs', '.js', '.json' ],
     mainFiles: [ 'index' ],
     aliasFields: [ 'browser' ],
     mainFields: [ 'browser', 'module', 'main' ] },
  module:
   { rules: [ {}, {}, {}, {} ],
     unknownContextRequest: '.',
     unknownContextRecursive: true,
     unknownContextCritical: true,
     exprContextRequest: '.',
     exprContextRecursive: true,
     exprContextCritical: true,
     wrappedContextRegExp: /.*/,
     wrappedContextRecursive: true,
     unsafeCache: true,
     defaultRules: [ {}, {}, {}, {} ] },
  mode: 'development',
  devtool: 'cheap-eval-source-map',
  devServer:
   { inline: true,
     hot: true,
     liveReload: true,
     watchContentBase: true,
     contentBase: 'C:\\dev\\Arcgis\\OneHundred\\webpack/',
     watchOptions: { poll: true },
     host: 'localhost',
     publicPath: '/',
     filename: 'js/[name].js',
     clientLogLevel: 'info',
     stats: { colors: {} },
     open: true,
     port: 8080 },
  context: 'C:\\dev\\Arcgis\\OneHundred',
  cache: true,
  target: 'web',
  node:
   { process: true,
     global: true,
     Buffer: true,
     setImmediate: true,
     __filename: 'mock',
     __dirname: 'mock' },
  optimization:
   { removeEmptyChunks: true,
     mergeDuplicateChunks: true,
     providedExports: true,
     splitChunks:
      { chunks: 'async',
        minSize: 10000,
        minChunks: 1,
        maxAsyncRequests: Infinity,
        automaticNameDelimiter: '~',
        automaticNameMaxLength: 109,
        maxInitialRequests: Infinity,
        name: true,
        cacheGroups: {} },
     namedModules: true,
     namedChunks: true,
     minimizer: [ {} ],
     nodeEnv: 'development' },
  resolveLoader:
   { unsafeCache: true,
     mainFields: [ 'loader', 'main' ],
     extensions: [ '.js', '.json' ],
     mainFiles: [ 'index' ] },
  infrastructureLogging: { level: 'info' } })